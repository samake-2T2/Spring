package com.coding404.controller;

import java.util.ArrayList;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.coding404.command.FreeBoardVO;
import com.coding404.freeboard.service.FreeBoardService;

@Controller // 컴포넌트 스캔
@RequestMapping("/freeBoard")
public class FreeBoardController {

	@Autowired
	@Qualifier("freeBoardService")
	FreeBoardService freeBoardService;

	// 화면처리
	@RequestMapping("/freeRegist")
	public String freeRegist() {
		return "freeBoard/freeRegist";
	}

	// 화면처리(목록)
	@RequestMapping("/freeList")
	public String freeList(Model model) {

		// 데이터를 가지고 나감
		ArrayList<FreeBoardVO> list = freeBoardService.getList();
		model.addAttribute("list", list);

		return "freeBoard/freeList";
	}

//	@RequestMapping("/freeDetail")
//	public String freeDetail(@RequestParam("bno") int bno, Model model) {
//
//		/*
//		 * 1. bno키를 받아서 getContent() 호출 2. 마이바티스에서 bno에 대한 결과를 조회해서 vo에 저장(화면에 vo를 전달)
//		 * 3. 화면에서는 결과값을 띄우기
//		 */
//
//		FreeBoardVO vo = freeBoardService.getContent(bno);
//		model.addAttribute("vo", vo);
//
//		return "freeBoard/freeDetail";
//	}
//
//	@RequestMapping("/freeModify")
//	public String freeModify(@RequestParam("bno") int bno, Model model) {
//
//		FreeBoardVO vo = freeBoardService.getContent(bno);
//		model.addAttribute("vo", vo);
//
//		return "freeBoard/freeModify";
//	}
	
	@RequestMapping({"/freeDetail", "/freeModify"})
	public void getContent(@RequestParam("bno") int bno, Model model) {
		FreeBoardVO vo = freeBoardService.getContent(bno);
		model.addAttribute("vo", vo);
	}
	
	// 등록 폼
	@RequestMapping(value = "/registForm", method = RequestMethod.POST)
	public String registForm(FreeBoardVO vo, RedirectAttributes RA) {

		// 등록...
		int result = freeBoardService.regist(vo);

		// result는 성공 실패 결과
		if (result == 1) {
			RA.addFlashAttribute("msg", "게시글이 등록처리 되었습니다."); // 리다이렉트시 1회성 데이터
		} else {
			RA.addFlashAttribute("msg", "게시글이 등록에 실패했습니다.");
		}

		return "redirect:/freeBoard/freeList"; // 리다이렉트
	}

}
